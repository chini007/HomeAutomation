apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    io.portainer.kubernetes.application.stack: portainer
  {{- include "helmportainer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.portainer.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: portainer
      app.name: {{ .Release.Name }}
    {{- include "helmportainer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: portainer
        app.name: {{ .Release.Name }}
      {{- include "helmportainer.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- toYaml .Values.portainer.portainer.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.portainer.portainer.image.repository }}:{{ .Values.portainer.portainer.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.portainer.portainer.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /
            port: 9443
            scheme: HTTPS
        name: portainer
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        - containerPort: 9443
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 9443
            scheme: HTTPS
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
      nodeSelector: {{- toYaml .Values.portainer.nodeSelector | nindent 8 }}
      serviceAccountName: {{ .Release.Name }}-sa-clusteradmin
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-config-pvc